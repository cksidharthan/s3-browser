basePath: /api
definitions:
  models.ConnectionRequest:
    properties:
      access_key:
        type: string
      endpoint:
        type: string
      region:
        type: string
      secret_key:
        type: string
      use_ssl:
        type: boolean
    type: object
  models.ConnectionResponse:
    properties:
      message:
        type: string
      session_id:
        type: string
      success:
        type: boolean
    type: object
  models.S3Bucket:
    properties:
      creation_date:
        type: string
      name:
        type: string
    type: object
  models.S3Object:
    properties:
      etag:
        type: string
      key:
        type: string
      last_modified:
        type: string
      size:
        type: integer
      storage_class:
        type: string
    type: object
  models.SessionStatusResponse:
    properties:
      has_session:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: A modern web-based file manager for S3-compatible storage systems
  title: S3 Browser API
  version: "1.0"
paths:
  /api/buckets:
    get:
      description: Lists all S3 buckets accessible to the current session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.S3Bucket'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List buckets
      tags:
      - Buckets
  /api/buckets/{name}:
    delete:
      consumes:
      - application/json
      description: Deletes an S3 bucket with the given name
      parameters:
      - description: Bucket Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
        "409":
          description: Conflict - Bucket not empty
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete bucket
      tags:
      - Buckets
    put:
      consumes:
      - application/json
      description: Creates a new S3 bucket with the given name
      parameters:
      - description: Bucket Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create bucket
      tags:
      - Buckets
  /api/connect:
    post:
      consumes:
      - application/json
      description: Establish connection to S3 storage and create session
      parameters:
      - description: Connection parameters
        in: body
        name: connection
        required: true
        schema:
          $ref: '#/definitions/models.ConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ConnectionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ConnectionResponse'
      summary: Connect to S3
      tags:
      - Session
  /api/logout:
    post:
      description: Destroys the current session and clears cookies
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout
      tags:
      - Session
  /api/objects:
    get:
      description: Lists all objects in a specified S3 bucket
      parameters:
      - description: Bucket name
        in: query
        name: bucket
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.S3Object'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List objects
      tags:
      - Objects
  /api/objects/{key}:
    delete:
      description: Deletes an object from the specified S3 bucket
      parameters:
      - description: Object key
        in: path
        name: key
        required: true
        type: string
      - description: Bucket name
        in: query
        name: bucket
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Object not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete object
      tags:
      - Objects
    get:
      description: Retrieves an object from S3 for viewing or download
      parameters:
      - description: Object key
        in: path
        name: key
        required: true
        type: string
      - description: Bucket name
        in: query
        name: bucket
        required: true
        type: string
      responses:
        "200":
          description: Object content
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Object not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: View/Download object
      tags:
      - Objects
    post:
      consumes:
      - multipart/form-data
      description: Uploads a file to the specified S3 bucket
      parameters:
      - description: Object key
        in: path
        name: key
        required: true
        type: string
      - description: Bucket name
        in: query
        name: bucket
        required: true
        type: string
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Upload object
      tags:
      - Objects
  /api/presigned-url:
    get:
      description: Generate a temporary URL for direct browser access to an S3 object
      parameters:
      - description: Bucket name
        in: query
        name: bucket
        required: true
        type: string
      - description: Object key
        in: query
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get presigned URL
      tags:
      - Objects
  /api/session/status:
    get:
      description: Check if the current request has a valid session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SessionStatusResponse'
      summary: Check session status
      tags:
      - Session
swagger: "2.0"
